var __awaiter=this&&this.__awaiter||function(t,a,c,u){return new(c=c||Promise)(function(n,e){function o(t){try{r(u.next(t))}catch(t){e(t)}}function i(t){try{r(u.throw(t))}catch(t){e(t)}}function r(t){var e;t.done?n(t.value):((e=t.value)instanceof c?e:new c(function(t){t(e)})).then(o,i)}r((u=u.apply(t,a||[])).next())})};function watchProgress(t,a){return __awaiter(this,void 0,void 0,function*(){if(t.body&&t.headers){const e=t.body.getReader(),o=Number(t.headers.get("Content-Length"))||0;let n=0;const i=e=>__awaiter(this,void 0,void 0,function*(){n+=(null==e?void 0:e.length)||0;var t=Math.round(n/o*100);a(t)}),r=()=>__awaiter(this,void 0,void 0,function*(){let t;try{t=yield e.read()}catch(t){return}t.done||(i(t.value),yield r())});r()}})}function fetchBlob(e,n,o){return __awaiter(this,void 0,void 0,function*(){const t=yield fetch(e,o);if(400<=t.status)throw new Error(`Failed to fetch ${e}: ${t.status} (${t.statusText})`);return watchProgress(t.clone(),n),t.blob()})}const Fetcher={fetchBlob:fetchBlob};export default Fetcher;