class t{constructor(){this.listeners={}}on(t,e,s){if(this.listeners[t]||(this.listeners[t]=new Set),this.listeners[t].add(e),null!=s&&s.once){const s=()=>{this.un(t,s),this.un(t,e)};return this.on(t,s),s}return()=>this.un(t,e)}un(t,e){null!=(t=this.listeners[t])&&t.delete(e)}once(t,e){return this.on(t,e,{once:!0})}unAll(){this.listeners={}}emit(t,...e){this.listeners[t]&&this.listeners[t].forEach(t=>t(...e))}}class e extends t{constructor(t){super(),this.subscriptions=[],this.options=t}onInit(){}_init(t){this.wavesurfer=t,this.onInit()}destroy(){this.emit("destroy"),this.subscriptions.forEach(t=>t())}}const s={scale:.5,deltaThreshold:5};class i extends e{constructor(t){super(t||{}),this.wrapper=void 0,this.container=null,this.accumulatedDelta=0,this.onWheel=t=>{var e,s,i,r;this.wavesurfer&&this.container&&!(Math.abs(t.deltaX)>=Math.abs(t.deltaY))&&(t.preventDefault(),this.accumulatedDelta+=-t.deltaY,0===this.options.deltaThreshold||Math.abs(this.accumulatedDelta)>=this.options.deltaThreshold)&&(e=this.wavesurfer.getDuration(),r=this.wavesurfer.options.minPxPerSec,t=t.clientX,s=this.container.clientWidth,i=(this.wavesurfer.getScroll()+t)/r,t=s/(r=this.calculateNewZoom(r,this.accumulatedDelta))*(t/s),r*e<s?(this.wavesurfer.zoom(s/e),this.container.scrollLeft=0):(this.wavesurfer.zoom(r),this.container.scrollLeft=(i-t)*r),this.accumulatedDelta=0)},this.calculateNewZoom=(t,e)=>{t=Math.max(0,t+e*this.options.scale);return void 0===this.options.maxZoom?t:Math.min(t,this.options.maxZoom)},this.options=Object.assign({},s,t)}static create(t){return new i(t)}onInit(){var t;this.wrapper=null==(t=this.wavesurfer)?void 0:t.getWrapper(),this.wrapper&&(this.container=this.wrapper.parentElement,this.wrapper.addEventListener("wheel",this.onWheel))}destroy(){this.wrapper&&this.wrapper.removeEventListener("wheel",this.onWheel),super.destroy()}}export{i as default};